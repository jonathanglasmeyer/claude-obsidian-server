"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ai-sdk+react@2.0.28_react@18.3.1_zod@4.1.5";
exports.ids = ["vendor-chunks/@ai-sdk+react@2.0.28_react@18.3.1_zod@4.1.5"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@ai-sdk+react@2.0.28_react@18.3.1_zod@4.1.5/node_modules/@ai-sdk/react/dist/index.mjs":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ai-sdk+react@2.0.28_react@18.3.1_zod@4.1.5/node_modules/@ai-sdk/react/dist/index.mjs ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* binding */ Chat),\n/* harmony export */   experimental_useObject: () => (/* binding */ experimental_useObject),\n/* harmony export */   useChat: () => (/* binding */ useChat),\n/* harmony export */   useCompletion: () => (/* binding */ useCompletion)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.32_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ai */ \"(ssr)/./node_modules/.pnpm/ai@5.0.28_zod@4.1.5/node_modules/ai/dist/index.mjs\");\n/* harmony import */ var throttleit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! throttleit */ \"(ssr)/./node_modules/.pnpm/throttleit@2.1.0/node_modules/throttleit/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swr */ \"(ssr)/./node_modules/.pnpm/swr@2.3.6_react@18.3.1/node_modules/swr/dist/index/index.mjs\");\n/* harmony import */ var _ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ai */ \"(ssr)/./node_modules/.pnpm/@ai-sdk+provider-utils@3.0.7_zod@4.1.5/node_modules/@ai-sdk/provider-utils/dist/index.mjs\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/use-chat.ts\n\n\n// src/chat.react.ts\n\n\n// src/throttle.ts\n\nfunction throttle(fn, waitMs) {\n  return waitMs != null ? throttleit__WEBPACK_IMPORTED_MODULE_1__(fn, waitMs) : fn;\n}\n\n// src/chat.react.ts\nvar _messages, _status, _error, _messagesCallbacks, _statusCallbacks, _errorCallbacks, _callMessagesCallbacks, _callStatusCallbacks, _callErrorCallbacks;\nvar ReactChatState = class {\n  constructor(initialMessages = []) {\n    __privateAdd(this, _messages, void 0);\n    __privateAdd(this, _status, \"ready\");\n    __privateAdd(this, _error, void 0);\n    __privateAdd(this, _messagesCallbacks, /* @__PURE__ */ new Set());\n    __privateAdd(this, _statusCallbacks, /* @__PURE__ */ new Set());\n    __privateAdd(this, _errorCallbacks, /* @__PURE__ */ new Set());\n    this.pushMessage = (message) => {\n      __privateSet(this, _messages, __privateGet(this, _messages).concat(message));\n      __privateGet(this, _callMessagesCallbacks).call(this);\n    };\n    this.popMessage = () => {\n      __privateSet(this, _messages, __privateGet(this, _messages).slice(0, -1));\n      __privateGet(this, _callMessagesCallbacks).call(this);\n    };\n    this.replaceMessage = (index, message) => {\n      __privateSet(this, _messages, [\n        ...__privateGet(this, _messages).slice(0, index),\n        // We deep clone the message here to ensure the new React Compiler (currently in RC) detects deeply nested parts/metadata changes:\n        this.snapshot(message),\n        ...__privateGet(this, _messages).slice(index + 1)\n      ]);\n      __privateGet(this, _callMessagesCallbacks).call(this);\n    };\n    this.snapshot = (value) => structuredClone(value);\n    this[\"~registerMessagesCallback\"] = (onChange, throttleWaitMs) => {\n      const callback = throttleWaitMs ? throttle(onChange, throttleWaitMs) : onChange;\n      __privateGet(this, _messagesCallbacks).add(callback);\n      return () => {\n        __privateGet(this, _messagesCallbacks).delete(callback);\n      };\n    };\n    this[\"~registerStatusCallback\"] = (onChange) => {\n      __privateGet(this, _statusCallbacks).add(onChange);\n      return () => {\n        __privateGet(this, _statusCallbacks).delete(onChange);\n      };\n    };\n    this[\"~registerErrorCallback\"] = (onChange) => {\n      __privateGet(this, _errorCallbacks).add(onChange);\n      return () => {\n        __privateGet(this, _errorCallbacks).delete(onChange);\n      };\n    };\n    __privateAdd(this, _callMessagesCallbacks, () => {\n      __privateGet(this, _messagesCallbacks).forEach((callback) => callback());\n    });\n    __privateAdd(this, _callStatusCallbacks, () => {\n      __privateGet(this, _statusCallbacks).forEach((callback) => callback());\n    });\n    __privateAdd(this, _callErrorCallbacks, () => {\n      __privateGet(this, _errorCallbacks).forEach((callback) => callback());\n    });\n    __privateSet(this, _messages, initialMessages);\n  }\n  get status() {\n    return __privateGet(this, _status);\n  }\n  set status(newStatus) {\n    __privateSet(this, _status, newStatus);\n    __privateGet(this, _callStatusCallbacks).call(this);\n  }\n  get error() {\n    return __privateGet(this, _error);\n  }\n  set error(newError) {\n    __privateSet(this, _error, newError);\n    __privateGet(this, _callErrorCallbacks).call(this);\n  }\n  get messages() {\n    return __privateGet(this, _messages);\n  }\n  set messages(newMessages) {\n    __privateSet(this, _messages, [...newMessages]);\n    __privateGet(this, _callMessagesCallbacks).call(this);\n  }\n};\n_messages = new WeakMap();\n_status = new WeakMap();\n_error = new WeakMap();\n_messagesCallbacks = new WeakMap();\n_statusCallbacks = new WeakMap();\n_errorCallbacks = new WeakMap();\n_callMessagesCallbacks = new WeakMap();\n_callStatusCallbacks = new WeakMap();\n_callErrorCallbacks = new WeakMap();\nvar _state;\nvar Chat = class extends ai__WEBPACK_IMPORTED_MODULE_2__.AbstractChat {\n  constructor({ messages, ...init }) {\n    const state = new ReactChatState(messages);\n    super({ ...init, state });\n    __privateAdd(this, _state, void 0);\n    this[\"~registerMessagesCallback\"] = (onChange, throttleWaitMs) => __privateGet(this, _state)[\"~registerMessagesCallback\"](onChange, throttleWaitMs);\n    this[\"~registerStatusCallback\"] = (onChange) => __privateGet(this, _state)[\"~registerStatusCallback\"](onChange);\n    this[\"~registerErrorCallback\"] = (onChange) => __privateGet(this, _state)[\"~registerErrorCallback\"](onChange);\n    __privateSet(this, _state, state);\n  }\n};\n_state = new WeakMap();\n\n// src/use-chat.ts\nfunction useChat({\n  experimental_throttle: throttleWaitMs,\n  resume = false,\n  ...options\n} = {}) {\n  const chatRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(\n    \"chat\" in options ? options.chat : new Chat(options)\n  );\n  const shouldRecreateChat = \"chat\" in options && options.chat !== chatRef.current || \"id\" in options && chatRef.current.id !== options.id;\n  if (shouldRecreateChat) {\n    chatRef.current = \"chat\" in options ? options.chat : new Chat(options);\n  }\n  const optionsId = \"id\" in options ? options.id : null;\n  const subscribeToMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (update) => chatRef.current[\"~registerMessagesCallback\"](update, throttleWaitMs),\n    // optionsId is required to trigger re-subscription when the chat ID changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [throttleWaitMs, optionsId]\n  );\n  const messages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    subscribeToMessages,\n    () => chatRef.current.messages,\n    () => chatRef.current.messages\n  );\n  const status = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    chatRef.current[\"~registerStatusCallback\"],\n    () => chatRef.current.status,\n    () => chatRef.current.status\n  );\n  const error = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    chatRef.current[\"~registerErrorCallback\"],\n    () => chatRef.current.error,\n    () => chatRef.current.error\n  );\n  const setMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (messagesParam) => {\n      if (typeof messagesParam === \"function\") {\n        messagesParam = messagesParam(chatRef.current.messages);\n      }\n      chatRef.current.messages = messagesParam;\n    },\n    [chatRef]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (resume) {\n      chatRef.current.resumeStream();\n    }\n  }, [resume, chatRef]);\n  return {\n    id: chatRef.current.id,\n    messages,\n    setMessages,\n    sendMessage: chatRef.current.sendMessage,\n    regenerate: chatRef.current.regenerate,\n    clearError: chatRef.current.clearError,\n    stop: chatRef.current.stop,\n    error,\n    resumeStream: chatRef.current.resumeStream,\n    status,\n    addToolResult: chatRef.current.addToolResult\n  };\n}\n\n// src/use-completion.ts\n\n\n\nfunction useCompletion({\n  api = \"/api/completion\",\n  id,\n  initialCompletion = \"\",\n  initialInput = \"\",\n  credentials,\n  headers,\n  body,\n  streamProtocol = \"data\",\n  fetch: fetch2,\n  onFinish,\n  onError,\n  experimental_throttle: throttleWaitMs\n} = {}) {\n  const hookId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const completionId = id || hookId;\n  const { data, mutate } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])([api, completionId], null, {\n    fallbackData: initialCompletion\n  });\n  const { data: isLoading = false, mutate: mutateLoading } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    [completionId, \"loading\"],\n    null\n  );\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const completion = data;\n  const [abortController, setAbortController] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const extraMetadataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    credentials,\n    headers,\n    body\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    extraMetadataRef.current = {\n      credentials,\n      headers,\n      body\n    };\n  }, [credentials, headers, body]);\n  const triggerRequest = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (prompt, options) => (0,ai__WEBPACK_IMPORTED_MODULE_2__.callCompletionApi)({\n      api,\n      prompt,\n      credentials: extraMetadataRef.current.credentials,\n      headers: { ...extraMetadataRef.current.headers, ...options == null ? void 0 : options.headers },\n      body: {\n        ...extraMetadataRef.current.body,\n        ...options == null ? void 0 : options.body\n      },\n      streamProtocol,\n      fetch: fetch2,\n      // throttle streamed ui updates:\n      setCompletion: throttle(\n        (completion2) => mutate(completion2, false),\n        throttleWaitMs\n      ),\n      setLoading: mutateLoading,\n      setError,\n      setAbortController,\n      onFinish,\n      onError\n    }),\n    [\n      mutate,\n      mutateLoading,\n      api,\n      extraMetadataRef,\n      setAbortController,\n      onFinish,\n      onError,\n      setError,\n      streamProtocol,\n      fetch2,\n      throttleWaitMs\n    ]\n  );\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (abortController) {\n      abortController.abort();\n      setAbortController(null);\n    }\n  }, [abortController]);\n  const setCompletion = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (completion2) => {\n      mutate(completion2, false);\n    },\n    [mutate]\n  );\n  const complete = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (prompt, options) => {\n      return triggerRequest(prompt, options);\n    },\n    [triggerRequest]\n  );\n  const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialInput);\n  const handleSubmit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (event) => {\n      var _a;\n      (_a = event == null ? void 0 : event.preventDefault) == null ? void 0 : _a.call(event);\n      return input ? complete(input) : void 0;\n    },\n    [input, complete]\n  );\n  const handleInputChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (e) => {\n      setInput(e.target.value);\n    },\n    [setInput]\n  );\n  return {\n    completion,\n    complete,\n    error,\n    setCompletion,\n    stop,\n    input,\n    setInput,\n    handleInputChange,\n    handleSubmit,\n    isLoading\n  };\n}\n\n// src/use-object.ts\n\n\n\n\nvar getOriginalFetch = () => fetch;\nfunction useObject({\n  api,\n  id,\n  schema,\n  // required, in the future we will use it for validation\n  initialValue,\n  fetch: fetch2,\n  onError,\n  onFinish,\n  headers,\n  credentials\n}) {\n  const hookId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const completionId = id != null ? id : hookId;\n  const { data, mutate } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    [api, completionId],\n    null,\n    { fallbackData: initialValue }\n  );\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const abortControllerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    var _a;\n    try {\n      (_a = abortControllerRef.current) == null ? void 0 : _a.abort();\n    } catch (ignored) {\n    } finally {\n      setIsLoading(false);\n      abortControllerRef.current = null;\n    }\n  }, []);\n  const submit = async (input) => {\n    var _a;\n    try {\n      clearObject();\n      setIsLoading(true);\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n      const actualFetch = fetch2 != null ? fetch2 : getOriginalFetch();\n      const response = await actualFetch(api, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...headers\n        },\n        credentials,\n        signal: abortController.signal,\n        body: JSON.stringify(input)\n      });\n      if (!response.ok) {\n        throw new Error(\n          (_a = await response.text()) != null ? _a : \"Failed to fetch the response.\"\n        );\n      }\n      if (response.body == null) {\n        throw new Error(\"The response body is empty.\");\n      }\n      let accumulatedText = \"\";\n      let latestObject = void 0;\n      await response.body.pipeThrough(new TextDecoderStream()).pipeTo(\n        new WritableStream({\n          async write(chunk) {\n            accumulatedText += chunk;\n            const { value } = await (0,ai__WEBPACK_IMPORTED_MODULE_2__.parsePartialJson)(accumulatedText);\n            const currentObject = value;\n            if (!(0,ai__WEBPACK_IMPORTED_MODULE_2__.isDeepEqualData)(latestObject, currentObject)) {\n              latestObject = currentObject;\n              mutate(currentObject);\n            }\n          },\n          async close() {\n            setIsLoading(false);\n            abortControllerRef.current = null;\n            if (onFinish != null) {\n              const validationResult = await (0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__.safeValidateTypes)({\n                value: latestObject,\n                schema: (0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__.asSchema)(schema)\n              });\n              onFinish(\n                validationResult.success ? { object: validationResult.value, error: void 0 } : { object: void 0, error: validationResult.error }\n              );\n            }\n          }\n        })\n      );\n    } catch (error2) {\n      if ((0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(error2)) {\n        return;\n      }\n      if (onError && error2 instanceof Error) {\n        onError(error2);\n      }\n      setIsLoading(false);\n      setError(error2 instanceof Error ? error2 : new Error(String(error2)));\n    }\n  };\n  const clear = () => {\n    stop();\n    clearObject();\n  };\n  const clearObject = () => {\n    setError(void 0);\n    setIsLoading(false);\n    mutate(void 0);\n  };\n  return {\n    submit,\n    object: data,\n    error,\n    isLoading,\n    stop,\n    clear\n  };\n}\nvar experimental_useObject = useObject;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFpLXNkaytyZWFjdEAyLjAuMjhfcmVhY3RAMTguMy4xX3pvZEA0LjEuNS9ub2RlX21vZHVsZXMvQGFpLXNkay9yZWFjdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDNkU7O0FBRTdFO0FBQ2tDOztBQUVsQztBQUMwQztBQUMxQztBQUNBLDBCQUEwQix1Q0FBZ0I7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDRDQUFZO0FBQ3JDLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQSxZQUFZLGdCQUFnQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFD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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRLFFBQVEsb0RBQWdCO0FBQ3BEO0FBQ0EsaUJBQWlCLG1EQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyx5RUFBaUI7QUFDOUQ7QUFDQSx3QkFBd0IsZ0VBQVE7QUFDaEMsZUFBZTtBQUNmO0FBQ0EsNkNBQTZDLGdEQUFnRCxJQUFJO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE1BQU07QUFDTixVQUFVLG9FQUFZO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1wcm90b3R5cGUvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFpLXNkaytyZWFjdEAyLjAuMjhfcmVhY3RAMTguMy4xX3pvZEA0LjEuNS9ub2RlX21vZHVsZXMvQGFpLXNkay9yZWFjdC9kaXN0L2luZGV4Lm1qcz82NGYzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2FjY2Vzc0NoZWNrID0gKG9iaiwgbWVtYmVyLCBtc2cpID0+IHtcbiAgaWYgKCFtZW1iZXIuaGFzKG9iaikpXG4gICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IFwiICsgbXNnKTtcbn07XG52YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgcmV0dXJuIGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiBtZW1iZXIuZ2V0KG9iaik7XG59O1xudmFyIF9fcHJpdmF0ZUFkZCA9IChvYmosIG1lbWJlciwgdmFsdWUpID0+IHtcbiAgaWYgKG1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpO1xuICBtZW1iZXIgaW5zdGFuY2VvZiBXZWFrU2V0ID8gbWVtYmVyLmFkZChvYmopIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbn07XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgc2V0dGVyID8gc2V0dGVyLmNhbGwob2JqLCB2YWx1ZSkgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xuXG4vLyBzcmMvdXNlLWNoYXQudHNcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3luY0V4dGVybmFsU3RvcmUgfSBmcm9tIFwicmVhY3RcIjtcblxuLy8gc3JjL2NoYXQucmVhY3QudHNcbmltcG9ydCB7IEFic3RyYWN0Q2hhdCB9IGZyb20gXCJhaVwiO1xuXG4vLyBzcmMvdGhyb3R0bGUudHNcbmltcG9ydCB0aHJvdHRsZUZ1bmN0aW9uIGZyb20gXCJ0aHJvdHRsZWl0XCI7XG5mdW5jdGlvbiB0aHJvdHRsZShmbiwgd2FpdE1zKSB7XG4gIHJldHVybiB3YWl0TXMgIT0gbnVsbCA/IHRocm90dGxlRnVuY3Rpb24oZm4sIHdhaXRNcykgOiBmbjtcbn1cblxuLy8gc3JjL2NoYXQucmVhY3QudHNcbnZhciBfbWVzc2FnZXMsIF9zdGF0dXMsIF9lcnJvciwgX21lc3NhZ2VzQ2FsbGJhY2tzLCBfc3RhdHVzQ2FsbGJhY2tzLCBfZXJyb3JDYWxsYmFja3MsIF9jYWxsTWVzc2FnZXNDYWxsYmFja3MsIF9jYWxsU3RhdHVzQ2FsbGJhY2tzLCBfY2FsbEVycm9yQ2FsbGJhY2tzO1xudmFyIFJlYWN0Q2hhdFN0YXRlID0gY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcihpbml0aWFsTWVzc2FnZXMgPSBbXSkge1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfbWVzc2FnZXMsIHZvaWQgMCk7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9zdGF0dXMsIFwicmVhZHlcIik7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9lcnJvciwgdm9pZCAwKTtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX21lc3NhZ2VzQ2FsbGJhY2tzLCAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpKTtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX3N0YXR1c0NhbGxiYWNrcywgLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSk7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9lcnJvckNhbGxiYWNrcywgLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSk7XG4gICAgdGhpcy5wdXNoTWVzc2FnZSA9IChtZXNzYWdlKSA9PiB7XG4gICAgICBfX3ByaXZhdGVTZXQodGhpcywgX21lc3NhZ2VzLCBfX3ByaXZhdGVHZXQodGhpcywgX21lc3NhZ2VzKS5jb25jYXQobWVzc2FnZSkpO1xuICAgICAgX19wcml2YXRlR2V0KHRoaXMsIF9jYWxsTWVzc2FnZXNDYWxsYmFja3MpLmNhbGwodGhpcyk7XG4gICAgfTtcbiAgICB0aGlzLnBvcE1lc3NhZ2UgPSAoKSA9PiB7XG4gICAgICBfX3ByaXZhdGVTZXQodGhpcywgX21lc3NhZ2VzLCBfX3ByaXZhdGVHZXQodGhpcywgX21lc3NhZ2VzKS5zbGljZSgwLCAtMSkpO1xuICAgICAgX19wcml2YXRlR2V0KHRoaXMsIF9jYWxsTWVzc2FnZXNDYWxsYmFja3MpLmNhbGwodGhpcyk7XG4gICAgfTtcbiAgICB0aGlzLnJlcGxhY2VNZXNzYWdlID0gKGluZGV4LCBtZXNzYWdlKSA9PiB7XG4gICAgICBfX3ByaXZhdGVTZXQodGhpcywgX21lc3NhZ2VzLCBbXG4gICAgICAgIC4uLl9fcHJpdmF0ZUdldCh0aGlzLCBfbWVzc2FnZXMpLnNsaWNlKDAsIGluZGV4KSxcbiAgICAgICAgLy8gV2UgZGVlcCBjbG9uZSB0aGUgbWVzc2FnZSBoZXJlIHRvIGVuc3VyZSB0aGUgbmV3IFJlYWN0IENvbXBpbGVyIChjdXJyZW50bHkgaW4gUkMpIGRldGVjdHMgZGVlcGx5IG5lc3RlZCBwYXJ0cy9tZXRhZGF0YSBjaGFuZ2VzOlxuICAgICAgICB0aGlzLnNuYXBzaG90KG1lc3NhZ2UpLFxuICAgICAgICAuLi5fX3ByaXZhdGVHZXQodGhpcywgX21lc3NhZ2VzKS5zbGljZShpbmRleCArIDEpXG4gICAgICBdKTtcbiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfY2FsbE1lc3NhZ2VzQ2FsbGJhY2tzKS5jYWxsKHRoaXMpO1xuICAgIH07XG4gICAgdGhpcy5zbmFwc2hvdCA9ICh2YWx1ZSkgPT4gc3RydWN0dXJlZENsb25lKHZhbHVlKTtcbiAgICB0aGlzW1wifnJlZ2lzdGVyTWVzc2FnZXNDYWxsYmFja1wiXSA9IChvbkNoYW5nZSwgdGhyb3R0bGVXYWl0TXMpID0+IHtcbiAgICAgIGNvbnN0IGNhbGxiYWNrID0gdGhyb3R0bGVXYWl0TXMgPyB0aHJvdHRsZShvbkNoYW5nZSwgdGhyb3R0bGVXYWl0TXMpIDogb25DaGFuZ2U7XG4gICAgICBfX3ByaXZhdGVHZXQodGhpcywgX21lc3NhZ2VzQ2FsbGJhY2tzKS5hZGQoY2FsbGJhY2spO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgX19wcml2YXRlR2V0KHRoaXMsIF9tZXNzYWdlc0NhbGxiYWNrcykuZGVsZXRlKGNhbGxiYWNrKTtcbiAgICAgIH07XG4gICAgfTtcbiAgICB0aGlzW1wifnJlZ2lzdGVyU3RhdHVzQ2FsbGJhY2tcIl0gPSAob25DaGFuZ2UpID0+IHtcbiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfc3RhdHVzQ2FsbGJhY2tzKS5hZGQob25DaGFuZ2UpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgX19wcml2YXRlR2V0KHRoaXMsIF9zdGF0dXNDYWxsYmFja3MpLmRlbGV0ZShvbkNoYW5nZSk7XG4gICAgICB9O1xuICAgIH07XG4gICAgdGhpc1tcIn5yZWdpc3RlckVycm9yQ2FsbGJhY2tcIl0gPSAob25DaGFuZ2UpID0+IHtcbiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfZXJyb3JDYWxsYmFja3MpLmFkZChvbkNoYW5nZSk7XG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBfX3ByaXZhdGVHZXQodGhpcywgX2Vycm9yQ2FsbGJhY2tzKS5kZWxldGUob25DaGFuZ2UpO1xuICAgICAgfTtcbiAgICB9O1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfY2FsbE1lc3NhZ2VzQ2FsbGJhY2tzLCAoKSA9PiB7XG4gICAgICBfX3ByaXZhdGVHZXQodGhpcywgX21lc3NhZ2VzQ2FsbGJhY2tzKS5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2soKSk7XG4gICAgfSk7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9jYWxsU3RhdHVzQ2FsbGJhY2tzLCAoKSA9PiB7XG4gICAgICBfX3ByaXZhdGVHZXQodGhpcywgX3N0YXR1c0NhbGxiYWNrcykuZm9yRWFjaCgoY2FsbGJhY2spID0+IGNhbGxiYWNrKCkpO1xuICAgIH0pO1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfY2FsbEVycm9yQ2FsbGJhY2tzLCAoKSA9PiB7XG4gICAgICBfX3ByaXZhdGVHZXQodGhpcywgX2Vycm9yQ2FsbGJhY2tzKS5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2soKSk7XG4gICAgfSk7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF9tZXNzYWdlcywgaW5pdGlhbE1lc3NhZ2VzKTtcbiAgfVxuICBnZXQgc3RhdHVzKCkge1xuICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX3N0YXR1cyk7XG4gIH1cbiAgc2V0IHN0YXR1cyhuZXdTdGF0dXMpIHtcbiAgICBfX3ByaXZhdGVTZXQodGhpcywgX3N0YXR1cywgbmV3U3RhdHVzKTtcbiAgICBfX3ByaXZhdGVHZXQodGhpcywgX2NhbGxTdGF0dXNDYWxsYmFja3MpLmNhbGwodGhpcyk7XG4gIH1cbiAgZ2V0IGVycm9yKCkge1xuICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX2Vycm9yKTtcbiAgfVxuICBzZXQgZXJyb3IobmV3RXJyb3IpIHtcbiAgICBfX3ByaXZhdGVTZXQodGhpcywgX2Vycm9yLCBuZXdFcnJvcik7XG4gICAgX19wcml2YXRlR2V0KHRoaXMsIF9jYWxsRXJyb3JDYWxsYmFja3MpLmNhbGwodGhpcyk7XG4gIH1cbiAgZ2V0IG1lc3NhZ2VzKCkge1xuICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX21lc3NhZ2VzKTtcbiAgfVxuICBzZXQgbWVzc2FnZXMobmV3TWVzc2FnZXMpIHtcbiAgICBfX3ByaXZhdGVTZXQodGhpcywgX21lc3NhZ2VzLCBbLi4ubmV3TWVzc2FnZXNdKTtcbiAgICBfX3ByaXZhdGVHZXQodGhpcywgX2NhbGxNZXNzYWdlc0NhbGxiYWNrcykuY2FsbCh0aGlzKTtcbiAgfVxufTtcbl9tZXNzYWdlcyA9IG5ldyBXZWFrTWFwKCk7XG5fc3RhdHVzID0gbmV3IFdlYWtNYXAoKTtcbl9lcnJvciA9IG5ldyBXZWFrTWFwKCk7XG5fbWVzc2FnZXNDYWxsYmFja3MgPSBuZXcgV2Vha01hcCgpO1xuX3N0YXR1c0NhbGxiYWNrcyA9IG5ldyBXZWFrTWFwKCk7XG5fZXJyb3JDYWxsYmFja3MgPSBuZXcgV2Vha01hcCgpO1xuX2NhbGxNZXNzYWdlc0NhbGxiYWNrcyA9IG5ldyBXZWFrTWFwKCk7XG5fY2FsbFN0YXR1c0NhbGxiYWNrcyA9IG5ldyBXZWFrTWFwKCk7XG5fY2FsbEVycm9yQ2FsbGJhY2tzID0gbmV3IFdlYWtNYXAoKTtcbnZhciBfc3RhdGU7XG52YXIgQ2hhdCA9IGNsYXNzIGV4dGVuZHMgQWJzdHJhY3RDaGF0IHtcbiAgY29uc3RydWN0b3IoeyBtZXNzYWdlcywgLi4uaW5pdCB9KSB7XG4gICAgY29uc3Qgc3RhdGUgPSBuZXcgUmVhY3RDaGF0U3RhdGUobWVzc2FnZXMpO1xuICAgIHN1cGVyKHsgLi4uaW5pdCwgc3RhdGUgfSk7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9zdGF0ZSwgdm9pZCAwKTtcbiAgICB0aGlzW1wifnJlZ2lzdGVyTWVzc2FnZXNDYWxsYmFja1wiXSA9IChvbkNoYW5nZSwgdGhyb3R0bGVXYWl0TXMpID0+IF9fcHJpdmF0ZUdldCh0aGlzLCBfc3RhdGUpW1wifnJlZ2lzdGVyTWVzc2FnZXNDYWxsYmFja1wiXShvbkNoYW5nZSwgdGhyb3R0bGVXYWl0TXMpO1xuICAgIHRoaXNbXCJ+cmVnaXN0ZXJTdGF0dXNDYWxsYmFja1wiXSA9IChvbkNoYW5nZSkgPT4gX19wcml2YXRlR2V0KHRoaXMsIF9zdGF0ZSlbXCJ+cmVnaXN0ZXJTdGF0dXNDYWxsYmFja1wiXShvbkNoYW5nZSk7XG4gICAgdGhpc1tcIn5yZWdpc3RlckVycm9yQ2FsbGJhY2tcIl0gPSAob25DaGFuZ2UpID0+IF9fcHJpdmF0ZUdldCh0aGlzLCBfc3RhdGUpW1wifnJlZ2lzdGVyRXJyb3JDYWxsYmFja1wiXShvbkNoYW5nZSk7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF9zdGF0ZSwgc3RhdGUpO1xuICB9XG59O1xuX3N0YXRlID0gbmV3IFdlYWtNYXAoKTtcblxuLy8gc3JjL3VzZS1jaGF0LnRzXG5mdW5jdGlvbiB1c2VDaGF0KHtcbiAgZXhwZXJpbWVudGFsX3Rocm90dGxlOiB0aHJvdHRsZVdhaXRNcyxcbiAgcmVzdW1lID0gZmFsc2UsXG4gIC4uLm9wdGlvbnNcbn0gPSB7fSkge1xuICBjb25zdCBjaGF0UmVmID0gdXNlUmVmKFxuICAgIFwiY2hhdFwiIGluIG9wdGlvbnMgPyBvcHRpb25zLmNoYXQgOiBuZXcgQ2hhdChvcHRpb25zKVxuICApO1xuICBjb25zdCBzaG91bGRSZWNyZWF0ZUNoYXQgPSBcImNoYXRcIiBpbiBvcHRpb25zICYmIG9wdGlvbnMuY2hhdCAhPT0gY2hhdFJlZi5jdXJyZW50IHx8IFwiaWRcIiBpbiBvcHRpb25zICYmIGNoYXRSZWYuY3VycmVudC5pZCAhPT0gb3B0aW9ucy5pZDtcbiAgaWYgKHNob3VsZFJlY3JlYXRlQ2hhdCkge1xuICAgIGNoYXRSZWYuY3VycmVudCA9IFwiY2hhdFwiIGluIG9wdGlvbnMgPyBvcHRpb25zLmNoYXQgOiBuZXcgQ2hhdChvcHRpb25zKTtcbiAgfVxuICBjb25zdCBvcHRpb25zSWQgPSBcImlkXCIgaW4gb3B0aW9ucyA/IG9wdGlvbnMuaWQgOiBudWxsO1xuICBjb25zdCBzdWJzY3JpYmVUb01lc3NhZ2VzID0gdXNlQ2FsbGJhY2soXG4gICAgKHVwZGF0ZSkgPT4gY2hhdFJlZi5jdXJyZW50W1wifnJlZ2lzdGVyTWVzc2FnZXNDYWxsYmFja1wiXSh1cGRhdGUsIHRocm90dGxlV2FpdE1zKSxcbiAgICAvLyBvcHRpb25zSWQgaXMgcmVxdWlyZWQgdG8gdHJpZ2dlciByZS1zdWJzY3JpcHRpb24gd2hlbiB0aGUgY2hhdCBJRCBjaGFuZ2VzXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIFt0aHJvdHRsZVdhaXRNcywgb3B0aW9uc0lkXVxuICApO1xuICBjb25zdCBtZXNzYWdlcyA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlKFxuICAgIHN1YnNjcmliZVRvTWVzc2FnZXMsXG4gICAgKCkgPT4gY2hhdFJlZi5jdXJyZW50Lm1lc3NhZ2VzLFxuICAgICgpID0+IGNoYXRSZWYuY3VycmVudC5tZXNzYWdlc1xuICApO1xuICBjb25zdCBzdGF0dXMgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShcbiAgICBjaGF0UmVmLmN1cnJlbnRbXCJ+cmVnaXN0ZXJTdGF0dXNDYWxsYmFja1wiXSxcbiAgICAoKSA9PiBjaGF0UmVmLmN1cnJlbnQuc3RhdHVzLFxuICAgICgpID0+IGNoYXRSZWYuY3VycmVudC5zdGF0dXNcbiAgKTtcbiAgY29uc3QgZXJyb3IgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShcbiAgICBjaGF0UmVmLmN1cnJlbnRbXCJ+cmVnaXN0ZXJFcnJvckNhbGxiYWNrXCJdLFxuICAgICgpID0+IGNoYXRSZWYuY3VycmVudC5lcnJvcixcbiAgICAoKSA9PiBjaGF0UmVmLmN1cnJlbnQuZXJyb3JcbiAgKTtcbiAgY29uc3Qgc2V0TWVzc2FnZXMgPSB1c2VDYWxsYmFjayhcbiAgICAobWVzc2FnZXNQYXJhbSkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlc1BhcmFtID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgbWVzc2FnZXNQYXJhbSA9IG1lc3NhZ2VzUGFyYW0oY2hhdFJlZi5jdXJyZW50Lm1lc3NhZ2VzKTtcbiAgICAgIH1cbiAgICAgIGNoYXRSZWYuY3VycmVudC5tZXNzYWdlcyA9IG1lc3NhZ2VzUGFyYW07XG4gICAgfSxcbiAgICBbY2hhdFJlZl1cbiAgKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocmVzdW1lKSB7XG4gICAgICBjaGF0UmVmLmN1cnJlbnQucmVzdW1lU3RyZWFtKCk7XG4gICAgfVxuICB9LCBbcmVzdW1lLCBjaGF0UmVmXSk7XG4gIHJldHVybiB7XG4gICAgaWQ6IGNoYXRSZWYuY3VycmVudC5pZCxcbiAgICBtZXNzYWdlcyxcbiAgICBzZXRNZXNzYWdlcyxcbiAgICBzZW5kTWVzc2FnZTogY2hhdFJlZi5jdXJyZW50LnNlbmRNZXNzYWdlLFxuICAgIHJlZ2VuZXJhdGU6IGNoYXRSZWYuY3VycmVudC5yZWdlbmVyYXRlLFxuICAgIGNsZWFyRXJyb3I6IGNoYXRSZWYuY3VycmVudC5jbGVhckVycm9yLFxuICAgIHN0b3A6IGNoYXRSZWYuY3VycmVudC5zdG9wLFxuICAgIGVycm9yLFxuICAgIHJlc3VtZVN0cmVhbTogY2hhdFJlZi5jdXJyZW50LnJlc3VtZVN0cmVhbSxcbiAgICBzdGF0dXMsXG4gICAgYWRkVG9vbFJlc3VsdDogY2hhdFJlZi5jdXJyZW50LmFkZFRvb2xSZXN1bHRcbiAgfTtcbn1cblxuLy8gc3JjL3VzZS1jb21wbGV0aW9uLnRzXG5pbXBvcnQge1xuICBjYWxsQ29tcGxldGlvbkFwaVxufSBmcm9tIFwiYWlcIjtcbmltcG9ydCB7IHVzZUNhbGxiYWNrIGFzIHVzZUNhbGxiYWNrMiwgdXNlRWZmZWN0IGFzIHVzZUVmZmVjdDIsIHVzZUlkLCB1c2VSZWYgYXMgdXNlUmVmMiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB1c2VTV1IgZnJvbSBcInN3clwiO1xuZnVuY3Rpb24gdXNlQ29tcGxldGlvbih7XG4gIGFwaSA9IFwiL2FwaS9jb21wbGV0aW9uXCIsXG4gIGlkLFxuICBpbml0aWFsQ29tcGxldGlvbiA9IFwiXCIsXG4gIGluaXRpYWxJbnB1dCA9IFwiXCIsXG4gIGNyZWRlbnRpYWxzLFxuICBoZWFkZXJzLFxuICBib2R5LFxuICBzdHJlYW1Qcm90b2NvbCA9IFwiZGF0YVwiLFxuICBmZXRjaDogZmV0Y2gyLFxuICBvbkZpbmlzaCxcbiAgb25FcnJvcixcbiAgZXhwZXJpbWVudGFsX3Rocm90dGxlOiB0aHJvdHRsZVdhaXRNc1xufSA9IHt9KSB7XG4gIGNvbnN0IGhvb2tJZCA9IHVzZUlkKCk7XG4gIGNvbnN0IGNvbXBsZXRpb25JZCA9IGlkIHx8IGhvb2tJZDtcbiAgY29uc3QgeyBkYXRhLCBtdXRhdGUgfSA9IHVzZVNXUihbYXBpLCBjb21wbGV0aW9uSWRdLCBudWxsLCB7XG4gICAgZmFsbGJhY2tEYXRhOiBpbml0aWFsQ29tcGxldGlvblxuICB9KTtcbiAgY29uc3QgeyBkYXRhOiBpc0xvYWRpbmcgPSBmYWxzZSwgbXV0YXRlOiBtdXRhdGVMb2FkaW5nIH0gPSB1c2VTV1IoXG4gICAgW2NvbXBsZXRpb25JZCwgXCJsb2FkaW5nXCJdLFxuICAgIG51bGxcbiAgKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZSh2b2lkIDApO1xuICBjb25zdCBjb21wbGV0aW9uID0gZGF0YTtcbiAgY29uc3QgW2Fib3J0Q29udHJvbGxlciwgc2V0QWJvcnRDb250cm9sbGVyXSA9IHVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBleHRyYU1ldGFkYXRhUmVmID0gdXNlUmVmMih7XG4gICAgY3JlZGVudGlhbHMsXG4gICAgaGVhZGVycyxcbiAgICBib2R5XG4gIH0pO1xuICB1c2VFZmZlY3QyKCgpID0+IHtcbiAgICBleHRyYU1ldGFkYXRhUmVmLmN1cnJlbnQgPSB7XG4gICAgICBjcmVkZW50aWFscyxcbiAgICAgIGhlYWRlcnMsXG4gICAgICBib2R5XG4gICAgfTtcbiAgfSwgW2NyZWRlbnRpYWxzLCBoZWFkZXJzLCBib2R5XSk7XG4gIGNvbnN0IHRyaWdnZXJSZXF1ZXN0ID0gdXNlQ2FsbGJhY2syKFxuICAgIGFzeW5jIChwcm9tcHQsIG9wdGlvbnMpID0+IGNhbGxDb21wbGV0aW9uQXBpKHtcbiAgICAgIGFwaSxcbiAgICAgIHByb21wdCxcbiAgICAgIGNyZWRlbnRpYWxzOiBleHRyYU1ldGFkYXRhUmVmLmN1cnJlbnQuY3JlZGVudGlhbHMsXG4gICAgICBoZWFkZXJzOiB7IC4uLmV4dHJhTWV0YWRhdGFSZWYuY3VycmVudC5oZWFkZXJzLCAuLi5vcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmhlYWRlcnMgfSxcbiAgICAgIGJvZHk6IHtcbiAgICAgICAgLi4uZXh0cmFNZXRhZGF0YVJlZi5jdXJyZW50LmJvZHksXG4gICAgICAgIC4uLm9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuYm9keVxuICAgICAgfSxcbiAgICAgIHN0cmVhbVByb3RvY29sLFxuICAgICAgZmV0Y2g6IGZldGNoMixcbiAgICAgIC8vIHRocm90dGxlIHN0cmVhbWVkIHVpIHVwZGF0ZXM6XG4gICAgICBzZXRDb21wbGV0aW9uOiB0aHJvdHRsZShcbiAgICAgICAgKGNvbXBsZXRpb24yKSA9PiBtdXRhdGUoY29tcGxldGlvbjIsIGZhbHNlKSxcbiAgICAgICAgdGhyb3R0bGVXYWl0TXNcbiAgICAgICksXG4gICAgICBzZXRMb2FkaW5nOiBtdXRhdGVMb2FkaW5nLFxuICAgICAgc2V0RXJyb3IsXG4gICAgICBzZXRBYm9ydENvbnRyb2xsZXIsXG4gICAgICBvbkZpbmlzaCxcbiAgICAgIG9uRXJyb3JcbiAgICB9KSxcbiAgICBbXG4gICAgICBtdXRhdGUsXG4gICAgICBtdXRhdGVMb2FkaW5nLFxuICAgICAgYXBpLFxuICAgICAgZXh0cmFNZXRhZGF0YVJlZixcbiAgICAgIHNldEFib3J0Q29udHJvbGxlcixcbiAgICAgIG9uRmluaXNoLFxuICAgICAgb25FcnJvcixcbiAgICAgIHNldEVycm9yLFxuICAgICAgc3RyZWFtUHJvdG9jb2wsXG4gICAgICBmZXRjaDIsXG4gICAgICB0aHJvdHRsZVdhaXRNc1xuICAgIF1cbiAgKTtcbiAgY29uc3Qgc3RvcCA9IHVzZUNhbGxiYWNrMigoKSA9PiB7XG4gICAgaWYgKGFib3J0Q29udHJvbGxlcikge1xuICAgICAgYWJvcnRDb250cm9sbGVyLmFib3J0KCk7XG4gICAgICBzZXRBYm9ydENvbnRyb2xsZXIobnVsbCk7XG4gICAgfVxuICB9LCBbYWJvcnRDb250cm9sbGVyXSk7XG4gIGNvbnN0IHNldENvbXBsZXRpb24gPSB1c2VDYWxsYmFjazIoXG4gICAgKGNvbXBsZXRpb24yKSA9PiB7XG4gICAgICBtdXRhdGUoY29tcGxldGlvbjIsIGZhbHNlKTtcbiAgICB9LFxuICAgIFttdXRhdGVdXG4gICk7XG4gIGNvbnN0IGNvbXBsZXRlID0gdXNlQ2FsbGJhY2syKFxuICAgIGFzeW5jIChwcm9tcHQsIG9wdGlvbnMpID0+IHtcbiAgICAgIHJldHVybiB0cmlnZ2VyUmVxdWVzdChwcm9tcHQsIG9wdGlvbnMpO1xuICAgIH0sXG4gICAgW3RyaWdnZXJSZXF1ZXN0XVxuICApO1xuICBjb25zdCBbaW5wdXQsIHNldElucHV0XSA9IHVzZVN0YXRlKGluaXRpYWxJbnB1dCk7XG4gIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IHVzZUNhbGxiYWNrMihcbiAgICAoZXZlbnQpID0+IHtcbiAgICAgIHZhciBfYTtcbiAgICAgIChfYSA9IGV2ZW50ID09IG51bGwgPyB2b2lkIDAgOiBldmVudC5wcmV2ZW50RGVmYXVsdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNhbGwoZXZlbnQpO1xuICAgICAgcmV0dXJuIGlucHV0ID8gY29tcGxldGUoaW5wdXQpIDogdm9pZCAwO1xuICAgIH0sXG4gICAgW2lucHV0LCBjb21wbGV0ZV1cbiAgKTtcbiAgY29uc3QgaGFuZGxlSW5wdXRDaGFuZ2UgPSB1c2VDYWxsYmFjazIoXG4gICAgKGUpID0+IHtcbiAgICAgIHNldElucHV0KGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9LFxuICAgIFtzZXRJbnB1dF1cbiAgKTtcbiAgcmV0dXJuIHtcbiAgICBjb21wbGV0aW9uLFxuICAgIGNvbXBsZXRlLFxuICAgIGVycm9yLFxuICAgIHNldENvbXBsZXRpb24sXG4gICAgc3RvcCxcbiAgICBpbnB1dCxcbiAgICBzZXRJbnB1dCxcbiAgICBoYW5kbGVJbnB1dENoYW5nZSxcbiAgICBoYW5kbGVTdWJtaXQsXG4gICAgaXNMb2FkaW5nXG4gIH07XG59XG5cbi8vIHNyYy91c2Utb2JqZWN0LnRzXG5pbXBvcnQge1xuICBpc0Fib3J0RXJyb3IsXG4gIHNhZmVWYWxpZGF0ZVR5cGVzXG59IGZyb20gXCJAYWktc2RrL3Byb3ZpZGVyLXV0aWxzXCI7XG5pbXBvcnQge1xuICBhc1NjaGVtYSxcbiAgaXNEZWVwRXF1YWxEYXRhLFxuICBwYXJzZVBhcnRpYWxKc29uXG59IGZyb20gXCJhaVwiO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgYXMgdXNlQ2FsbGJhY2szLCB1c2VJZCBhcyB1c2VJZDIsIHVzZVJlZiBhcyB1c2VSZWYzLCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTIgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB1c2VTV1IyIGZyb20gXCJzd3JcIjtcbnZhciBnZXRPcmlnaW5hbEZldGNoID0gKCkgPT4gZmV0Y2g7XG5mdW5jdGlvbiB1c2VPYmplY3Qoe1xuICBhcGksXG4gIGlkLFxuICBzY2hlbWEsXG4gIC8vIHJlcXVpcmVkLCBpbiB0aGUgZnV0dXJlIHdlIHdpbGwgdXNlIGl0IGZvciB2YWxpZGF0aW9uXG4gIGluaXRpYWxWYWx1ZSxcbiAgZmV0Y2g6IGZldGNoMixcbiAgb25FcnJvcixcbiAgb25GaW5pc2gsXG4gIGhlYWRlcnMsXG4gIGNyZWRlbnRpYWxzXG59KSB7XG4gIGNvbnN0IGhvb2tJZCA9IHVzZUlkMigpO1xuICBjb25zdCBjb21wbGV0aW9uSWQgPSBpZCAhPSBudWxsID8gaWQgOiBob29rSWQ7XG4gIGNvbnN0IHsgZGF0YSwgbXV0YXRlIH0gPSB1c2VTV1IyKFxuICAgIFthcGksIGNvbXBsZXRpb25JZF0sXG4gICAgbnVsbCxcbiAgICB7IGZhbGxiYWNrRGF0YTogaW5pdGlhbFZhbHVlIH1cbiAgKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTIodm9pZCAwKTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlMihmYWxzZSk7XG4gIGNvbnN0IGFib3J0Q29udHJvbGxlclJlZiA9IHVzZVJlZjMobnVsbCk7XG4gIGNvbnN0IHN0b3AgPSB1c2VDYWxsYmFjazMoKCkgPT4ge1xuICAgIHZhciBfYTtcbiAgICB0cnkge1xuICAgICAgKF9hID0gYWJvcnRDb250cm9sbGVyUmVmLmN1cnJlbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYS5hYm9ydCgpO1xuICAgIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIGFib3J0Q29udHJvbGxlclJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG4gIH0sIFtdKTtcbiAgY29uc3Qgc3VibWl0ID0gYXN5bmMgKGlucHV0KSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIHRyeSB7XG4gICAgICBjbGVhck9iamVjdCgpO1xuICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgYWJvcnRDb250cm9sbGVyUmVmLmN1cnJlbnQgPSBhYm9ydENvbnRyb2xsZXI7XG4gICAgICBjb25zdCBhY3R1YWxGZXRjaCA9IGZldGNoMiAhPSBudWxsID8gZmV0Y2gyIDogZ2V0T3JpZ2luYWxGZXRjaCgpO1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhY3R1YWxGZXRjaChhcGksIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIC4uLmhlYWRlcnNcbiAgICAgICAgfSxcbiAgICAgICAgY3JlZGVudGlhbHMsXG4gICAgICAgIHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbCxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoaW5wdXQpXG4gICAgICB9KTtcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIChfYSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKSkgIT0gbnVsbCA/IF9hIDogXCJGYWlsZWQgdG8gZmV0Y2ggdGhlIHJlc3BvbnNlLlwiXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAocmVzcG9uc2UuYm9keSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSByZXNwb25zZSBib2R5IGlzIGVtcHR5LlwiKTtcbiAgICAgIH1cbiAgICAgIGxldCBhY2N1bXVsYXRlZFRleHQgPSBcIlwiO1xuICAgICAgbGV0IGxhdGVzdE9iamVjdCA9IHZvaWQgMDtcbiAgICAgIGF3YWl0IHJlc3BvbnNlLmJvZHkucGlwZVRocm91Z2gobmV3IFRleHREZWNvZGVyU3RyZWFtKCkpLnBpcGVUbyhcbiAgICAgICAgbmV3IFdyaXRhYmxlU3RyZWFtKHtcbiAgICAgICAgICBhc3luYyB3cml0ZShjaHVuaykge1xuICAgICAgICAgICAgYWNjdW11bGF0ZWRUZXh0ICs9IGNodW5rO1xuICAgICAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gYXdhaXQgcGFyc2VQYXJ0aWFsSnNvbihhY2N1bXVsYXRlZFRleHQpO1xuICAgICAgICAgICAgY29uc3QgY3VycmVudE9iamVjdCA9IHZhbHVlO1xuICAgICAgICAgICAgaWYgKCFpc0RlZXBFcXVhbERhdGEobGF0ZXN0T2JqZWN0LCBjdXJyZW50T2JqZWN0KSkge1xuICAgICAgICAgICAgICBsYXRlc3RPYmplY3QgPSBjdXJyZW50T2JqZWN0O1xuICAgICAgICAgICAgICBtdXRhdGUoY3VycmVudE9iamVjdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBhc3luYyBjbG9zZSgpIHtcbiAgICAgICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICAgICAgICBhYm9ydENvbnRyb2xsZXJSZWYuY3VycmVudCA9IG51bGw7XG4gICAgICAgICAgICBpZiAob25GaW5pc2ggIT0gbnVsbCkge1xuICAgICAgICAgICAgICBjb25zdCB2YWxpZGF0aW9uUmVzdWx0ID0gYXdhaXQgc2FmZVZhbGlkYXRlVHlwZXMoe1xuICAgICAgICAgICAgICAgIHZhbHVlOiBsYXRlc3RPYmplY3QsXG4gICAgICAgICAgICAgICAgc2NoZW1hOiBhc1NjaGVtYShzY2hlbWEpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICBvbkZpbmlzaChcbiAgICAgICAgICAgICAgICB2YWxpZGF0aW9uUmVzdWx0LnN1Y2Nlc3MgPyB7IG9iamVjdDogdmFsaWRhdGlvblJlc3VsdC52YWx1ZSwgZXJyb3I6IHZvaWQgMCB9IDogeyBvYmplY3Q6IHZvaWQgMCwgZXJyb3I6IHZhbGlkYXRpb25SZXN1bHQuZXJyb3IgfVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSBjYXRjaCAoZXJyb3IyKSB7XG4gICAgICBpZiAoaXNBYm9ydEVycm9yKGVycm9yMikpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKG9uRXJyb3IgJiYgZXJyb3IyIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgb25FcnJvcihlcnJvcjIpO1xuICAgICAgfVxuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHNldEVycm9yKGVycm9yMiBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IyIDogbmV3IEVycm9yKFN0cmluZyhlcnJvcjIpKSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBjbGVhciA9ICgpID0+IHtcbiAgICBzdG9wKCk7XG4gICAgY2xlYXJPYmplY3QoKTtcbiAgfTtcbiAgY29uc3QgY2xlYXJPYmplY3QgPSAoKSA9PiB7XG4gICAgc2V0RXJyb3Iodm9pZCAwKTtcbiAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIG11dGF0ZSh2b2lkIDApO1xuICB9O1xuICByZXR1cm4ge1xuICAgIHN1Ym1pdCxcbiAgICBvYmplY3Q6IGRhdGEsXG4gICAgZXJyb3IsXG4gICAgaXNMb2FkaW5nLFxuICAgIHN0b3AsXG4gICAgY2xlYXJcbiAgfTtcbn1cbnZhciBleHBlcmltZW50YWxfdXNlT2JqZWN0ID0gdXNlT2JqZWN0O1xuZXhwb3J0IHtcbiAgQ2hhdCxcbiAgZXhwZXJpbWVudGFsX3VzZU9iamVjdCxcbiAgdXNlQ2hhdCxcbiAgdXNlQ29tcGxldGlvblxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ai-sdk+react@2.0.28_react@18.3.1_zod@4.1.5/node_modules/@ai-sdk/react/dist/index.mjs\n");

/***/ })

};
;